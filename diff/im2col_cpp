diff --git a/src/caffe/util/im2col.cpp b/src/caffe/util/im2col.cpp
index c48f31f..066534d 100644
--- a/src/caffe/util/im2col.cpp
+++ b/src/caffe/util/im2col.cpp
@@ -12,9 +12,12 @@ void im2col_cpu(const Dtype* data_im, const int channels,
     const int height, const int width, const int kernel_h, const int kernel_w,
     const int pad_h, const int pad_w,
     const int stride_h, const int stride_w,
-    Dtype* data_col) {
-  int height_col = (height + 2 * pad_h - kernel_h) / stride_h + 1;
-  int width_col = (width + 2 * pad_w - kernel_w) / stride_w + 1;
+    Dtype* data_col, const int kstride_h, const int kstride_w) {
+  int ext_kernel_h = (kernel_h - 1) * kstride_h + 1;
+  int ext_kernel_w = (kernel_w - 1) * kstride_w + 1;
+
+  int height_col = (height + 2 * pad_h - ext_kernel_h) / stride_h + 1;
+  int width_col = (width + 2 * pad_w - ext_kernel_w) / stride_w + 1;
   int channels_col = channels * kernel_h * kernel_w;
   for (int c = 0; c < channels_col; ++c) {
     int w_offset = c % kernel_w;
@@ -22,8 +25,8 @@ void im2col_cpu(const Dtype* data_im, const int channels,
     int c_im = c / kernel_h / kernel_w;
     for (int h = 0; h < height_col; ++h) {
       for (int w = 0; w < width_col; ++w) {
-        int h_pad = h * stride_h - pad_h + h_offset;
-        int w_pad = w * stride_w - pad_w + w_offset;
+        int h_pad = h * stride_h - pad_h + h_offset * kstride_h;
+        int w_pad = w * stride_w - pad_w + w_offset * kstride_w;
         if (h_pad >= 0 && h_pad < height && w_pad >= 0 && w_pad < width)
           data_col[(c * height_col + h) * width_col + w] =
             data_im[(c_im * height + h_pad) * width + w_pad];
@@ -38,11 +41,11 @@ void im2col_cpu(const Dtype* data_im, const int channels,
 template void im2col_cpu<float>(const float* data_im, const int channels,
     const int height, const int width, const int kernel_h, const int kernel_w,
     const int pad_h, const int pad_w, const int stride_h,
-    const int stride_w, float* data_col);
+    const int stride_w, float* data_col, const int kstride_h, const int kstride_w);
 template void im2col_cpu<double>(const double* data_im, const int channels,
     const int height, const int width, const int kernel_h, const int kernel_w,
     const int pad_h, const int pad_w, const int stride_h,
-    const int stride_w, double* data_col);
+    const int stride_w, double* data_col, const int kstride_h, const int kstride_w);
 
 template <typename Dtype>
 void col2im_cpu(const Dtype* data_col, const int channels,
